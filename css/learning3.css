/* learning３ */

header {
  position: fixed;
  top: 0;
  height: 90px;
  z-index: 15;
  width: 100%;
}

.section-learning3 {
  position: relative;
}


.fade-left {
  width: 400px;
  height: 300px;
  background-color: aqua;
  font-size: 200%;
  margin: 0 auto;
  animation-name: fadeLeftAnime;
  animation-duration: 2s;
  animation-fill-mode: forwards;
}

@keyframes fadeLeftAnime {
  from {
    opacity: 0;
    transform: translatex(-500px);
  }
  to {
    opacity: 1;
    transform: translatey(100px);
  }
}

.fade-up {
  width: 400px;
  height: 300px;
  background-color: rgb(237, 240, 78);
  font-size: 200%;
  margin: 0 auto;
  z-index: 10;
  animation-name: fadeUpAnime;
  animation-duration: 2s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeUpAnime {
  from {
    opacity: 0;
    transform: translatey(500px);
  }
  to {
    opacity: 1;
    transform: translatex(-200px);
  }
}

.fade-right {
  width: 400px;
  height: 300px;
  background-color: lightgreen;
  font-size: 200%;
  position: absolute;
  top: 0;
  left: 5%;
  z-index: -10;
  animation-name: fadeRightAnime;
  animation-duration: 2s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeRightAnime {
  from {
    opacity: 0;
    transform: translatex(800px);
  }
  to {
    opacity: 1;
    transform: translatey(200px);
  }
}

.fade-down {
  width: 400px;
  height: 300px;
  background-color: lightcoral;
  font-size: 200%;
  position: absolute;
  top: 200px;
  right: 0%;
  animation-name: fadeDownAnime;
  animation-duration: 2s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeDownAnime {
  from {
    opacity: 0;
    transform: translatey(-800px);
  }
  to {
    opacity: 1;
    transform: translatex(-300px);
  }
}

.delay-time1 {
  animation-delay: 0.3s;
}

.delay-time2 {
  animation-delay: 0.6s;
}

.delay-time3 {
  animation-delay: 0.9s;
}


.flip {
  transform: translate3d(0,0,0);
}

.flip-down {
  width: 400px;
  height: 300px;
  background-color: darksalmon;
  font-size: 200%;
  animation-name: flipDown;
  animation-duration: 2s;
  animation-fill-mode: forwards;
  opacity: 0;
  margin-top: 100px;
}

@keyframes flipDown {
  from {
    transform: perspective(1000px) rotatex(110deg);
    opacity: 0;
  }
  to {
    transform: perspective(1000px) rotatex(0) rotatey(40deg);
    opacity: 1;
  }
}

.rotateX {
  width: 400px;
  height: 300px;
  background-color: darkseagreen;
  font-size: 200%;
  position: absolute;
  top: 700px;
  right: 5%;
  animation-name: rotateX;
  animation-duration: 3s;
  animation-fill-mode: forwards;
}

@keyframes rotateX {
  from {
    transform: rotateX(0);
  }
  to {
    transform: rotateX(-360deg) rotateZ(360deg);
  }
}


section.fixed {
  position: -webkit-sticky;
  position: sticky;
  /* sticky.jsをインポートし、position: sticky, topにピクセル数を入れると、
  その分だけ画像同士がくっつきあい、紙芝居のようなエフェクトをつけることができる */
  top: 100px;
}

section img {
  width: 100%;
  height: 1000px;
}

/* ラストの要素がheaderとくっついてしまう */
section.fixed:last-of-type {
padding-top: 150px;
z-index: 5;
}
section.fixed {
  margin-top: 50px;
}


.zoom-in {
  width: 400px;
  height: 300px;
  background-color: orchid;
  font-size: 200%;
  position: absolute;
  top: 500px;
  right: 40%;
  animation-name: zoomIn;
  animation-duration: 2s;
  animation-fill-mode: forwards;
}

@keyframes zoomIn {
  from {
    transform: scale(0.7);
  }
  to {
    transform: scale(1.2);
  }
}

.zoom-out {
  width: 400px;
  height: 300px;
  background-color:mediumturquoise;
  font-size: 200%;
  position: absolute;
  top: 700px;
  left: 20%;
  animation-name: zoomOut;
  animation-duration: 2s;
  animation-fill-mode: forwards;
}

@keyframes zoomOut {
  from {
    transform: scale(1.2);
  }
  to {
    transform: scale(0.6);
  }
}


.blur {
  width: 400px;
  height: 300px;
  margin-top: 50px;
  margin-left: 100px;
  background-color:lawngreen;
  font-size: 200%;
  animation-name: blur;
  animation-duration: 1.5s;
  animation-fill-mode: forwards;
}

@keyframes blur {
  from{
    filter: blur(15px);
    transform: scale(1.02);
  }
  to {
    filter: blur(0);
    transform: scale(1);
  }
}

.smooth {
  width: 400px;
  height: 300px;
  position: absolute;
  top: 900px;
  right: 20%;
  background-color:yellow;
  font-size: 200%;
  animation-name: smooth;
  animation-duration: 1.5s;
  animation-fill-mode: forwards;
  transform-origin: right;
  opacity: 0;
}

@keyframes smooth {
  from {
    transform: translate3d(0, 100%, 0) skewY(100deg);
    opacity: 0;
  }
  to {
    transform: translate3d(0, 0, 0) skewY(5deg);
    opacity: 1;
  }
}

.line {
  position: relative;
  margin-top: 30px;
}

.line::before, .line::after {
  position: absolute;
  content: "";
  width: 0;
  height: 1px;
  background: #333;
}

.line::before {
  top: 0;
  left: 0;
  animation: line .5s linear 0s forwards;
}

.line::after {
  bottom: 0;
  right: 0;
  animation: line .5s linear 1s forwards;
}

@keyframes line {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}

.line2::before, .line2::after {
  position: absolute;
  content: "";
  width: 1px;
  height: 0px;
  background: #333;
}

.line2::before {
  top: 0;
  right: 0;
  animation: line2 .5s linear .5s forwards;
}

.line2::after {
  bottom: 0;
  left: 0;
  animation: line2 .5s linear 1.5s forwards;
}

@keyframes line2 {
  0% {
    height: 0;
  }
  100% {
    height: 100%;
  }
}

.lineappear {
  animation: lineInner 1s linear 1s forwards;
  font-size: 200%;
  opacity: 0;
}

@keyframes lineInner {
  0% {opacity: 0;}
  100% {opacity: 1;}
}

.bgextend {
  animation-name: bgextend;
  animation-duration: 3s;
  animation-fill-mode: forwards;
  position: relative;
  margin-top: 50px;
  width: 100%;
  height: 500px;
  /* overflow: hidden; */
  opacity: 0;
}

@keyframes bgextend {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.bgappear {
  animation-name: bgappear;
  animation-duration: 3s;
  animation-fill-mode: forwards;
  font-size: 200%;
  opacity: 0;
}

@keyframes bgappear {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.bgDUextend::before {
  animation-name: bgDUextend;
  animation-duration: 3s;
  animation-fill-mode: forwards;
  content: "";
  position: absolute;
  /* 親要素の長さ分だけ、背景色を動かすために以下の記述は必要 */
  width: 100%;
  height: 100%;
  background-color: #666;
}

@keyframes bgDUextend {
  0% {
    transform-origin: top;
    transform: scaleY(0);
  }
  25% {
    transform-origin: top;
    transform: scaleY(1);
  }
  25.001% {
    transform-origin: bottom;
    transform: scaleY(1);
  }
  50% {
    transform-origin: bottom;
    transform: scaleY(0);
  }
  50.001% {
    transform-origin: top;
    transform: scaleY(0);
  }
  100% {
    transform-origin: top;
    transform: scaleY(1);
  }
}